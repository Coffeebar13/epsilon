import random, config, sys, os, wikipedia

from bs4 import BeautifulSoup as bs
from datetime import datetime as dt
import requests as r
from yandex_music import Client
from fuzzywuzzy import fuzz, process
from aiogram import Bot, types
from phonenumbers import parse, geocoder, timezone, carrier
from phonenumbers.phonenumberutil import NumberParseException
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor

bot = Bot(config.token)
dp = Dispatcher(bot)

# Bot variables
emojies =['‚≠ê', '‚ù§Ô∏è', 'üî•', '‚ú®', 'üë®‚Äçüíª', 'üë®‚Äçüîß']
errors = ['–Ø –Ω–µ –ø–æ–Ω—è–ª! –ù–∞–ø–∏—à–∏ —á—Ç–æ-—Ç–æ –º–µ–Ω–µ–µ –æ—Å—Ç—Ä–æ—É–º–Ω–æ–µ.', "–ú–æ—è —Ç–≤–æ—è –Ω–µ –ø–æ–Ω–∏–º–∞—Ç—å! –ü–∏—à–∏ –ø–æ–Ω—è—Ç–Ω–µ–µ.", "–û—à–∏–±–∫–∞: –ë–æ—Ç–°–ª–∏—à–∫–æ–º–¢—É–ø–æ–π–ß—Ç–æ–±—ã–≠—Ç–æ–ü–æ–Ω—è—Ç—å!", "–ù–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω–∏–º–∞—é!", "–°–æ—Ä—Ä–∏", "–º–∞–π –±—Ä–µ–π–Ω –∏—Å —Ç—É—É —Å–º–æ–ª —Ç—É –∞–Ω–¥–µ—Ä—Å—Ç–µ–Ω–¥ —Ç—Ö–∏—Å!"]
greeting = ["–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ", "–î–æ–±—Ä—ã–π –¥–µ–Ω—å", "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä", "–î–æ–±—Ä–æ–π –Ω–æ—á–∏"]
jokes_list_start_num = 0

# User commands
user_greet = ['–ü—Ä–∏–≤–µ—Ç', "–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ", "–î–æ–±—Ä—ã–π –¥–µ–Ω—å", "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä", "–î–æ–±—Ä–æ–π –Ω–æ—á–∏", "–ê–≤–µ", "–°–∞–ª–∞–º", "–ü—Ä–∏–≤–µ—Ç", "–•–∞—É–¥–∏", "–•–µ–ª–ª–æ—É"]
jokes_cmds = ["–ê–Ω–µ–∫–¥–æ—Ç", "–®—É—Ç–∫–∞", "–ü—Ä–∏–∫–æ–ª"]
all_cmds = [*jokes_cmds, *user_greet, "–û –±–æ—Ç–µ", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏", "–∫—É–±–∏–∫"]

# Bot commands
@dp.message_handler(commands=['start'])
async def start_cmd(message: types.Message):
    global emojies
    name = message.from_user.first_name
    #await bot.send_message(message.from_user.id, "text=message.from_user.id)
    if 4 <= dt.now().hour <= 12:
        if int(message.from_user.id) != int("1618502708") and int(message.from_user.id) != int("940369449"):
            await bot.send_message(message.from_user.id, text=f"{greeting[0]}, {name}!")
        else:
            await bot.send_message(message.from_user.id, text=f"{greeting[0]}, {name}! " + random.choice(emojies))
    elif 12 <= dt.now().hour <= 16:
        if int(message.from_user.id) != int("1618502708") and int(message.from_user.id) != int("940369449"):
            await bot.send_message(message.from_user.id,text=f"{greeting[1]}, {name}!")
        else:
            await bot.send_message(message.from_user.id, text=f"{greeting[1]}, {name}! " + random.choice(emojies))
    elif 16 <= dt.now().hour <= 24:
        if int(message.from_user.id) != int("1618502708") and int(message.from_user.id) != int("940369449"):
            await bot.send_message(message.from_user.id, text=f"{greeting[2]}, {name}!")
        else:
            await bot.send_message(message.from_user.id, text=f"{greeting[2]}, {name}! " + random.choice(emojies))
    elif dt.now().hour >= 24 or dt.now().hour <= 4:
        if int(message.from_user.id) != int("1618502708") and int(message.from_user.id) != int("940369449"):
            await bot.send_message(message.from_user.id, text=f"{greeting[3]}, {name}!")
        else:
            await bot.send_message(message.from_user.id, text=f"{greeting[3]}, {name}! " + random.choice(emojies))
    # if int(message.from_user.id) != int("1618502708") and int(message.from_user.id) != int("940369449"):
    #     await bot.send_message(message.from_user.id, "text=f"{greeting[3]}, "{name}!")
    # else:
    #     await bot.send_message(message.from_user.id, "text=f"{greeting[3]}, "{name}!" + random.choice(emojies))

# Bot chat-commands

@dp.message_handler()
async def all_textes(message: types.Message):
    global errors, last_jokes, jokes_list_start_num, greeting, emojies
    name = message.from_user.first_name

    if fuzz.partial_ratio(message.text, jokes_cmds) > 65:
        url = 'https://www.anekdot.ru/release/anekdot/day/'
        html = r.get(url)
        soup = bs(html.text, 'html.parser')
        await bot.send_message(message.from_user.id, text=soup.select(".text")[jokes_list_start_num].text)
        jokes_list_start_num += 1
    elif fuzz.ratio(message.text, '–û –±–æ—Ç–µ') > 65:
        await message.answer('<i>Project Epsilon (Œµ)</i>\n–í–µ—Ä—Å–∏—è: <i>0.0.3</i>\n–°–±–æ—Ä–∫–∞: <i>–ê–ª—å—Ñ–∞</i>\n–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∏: <i>@notCloffer, @DimaEmelianov90</i>', parse_mode="HTML")
    elif fuzz.ratio(message.text, user_greet) > 65:
        if 4 <= dt.now().hour <= 12:
            if int(message.from_user.id) != int("1618502708") and int(message.from_user.id) != int("940369449"):
                await message.reply(f"{greeting[0]}, {name}!")
            else:
                await bot.send_message(message.from_user.id, text=f"{greeting[0]}, {name}! " + random.choice(emojies))
        elif 12 <= dt.now().hour <= 16:
            if int(message.from_user.id) != int("1618502708") and int(message.from_user.id) != int("940369449"):
                await message.reply(f"{greeting[1]}, {name}!")
            else:
                await bot.send_message(message.from_user.id, text=f"{greeting[1]}, {name}! " + random.choice(emojies))
        elif 16 <= dt.now().hour <= 24:
            if int(message.from_user.id) != int("1618502708") and int(message.from_user.id) != int("940369449"):
                await message.reply(f"{greeting[2]}, {name}!")
            else:
                await bot.send_message(message.from_user.id, text=f"{greeting[2]}, {name}! " + random.choice(emojies))
        elif dt.now().hour >= 24 or dt.now().hour <= 4:
            if int(message.from_user.id) != int("1618502708") and int(message.from_user.id) != int("940369449"):
                await message.reply(f"{greeting[3]}, {name}!")
            else:
                await bot.send_message(message.from_user.id, text=f"{greeting[3]}, {name}! " + random.choice(emojies))
        # print(fuzz.ratio(message.text, user_greet))
    elif fuzz.ratio(message.text, '–ù–∞—Å—Ç—Ä–æ–π–∫–∏') > 65:
        await bot.send_message(message.from_user.id, text="–î–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è –ø–æ–∂–æ–¥–∏!")
    elif message.text.startswith("+7"):
        mts_codes = ("901", "902", "904", "908", "910", "911", "912", "913", "914", "915", "916", "917", "918", "919", "950", "958", "978", "980", "981", "982", "983", "984", "985", "986", "987", "988", "989")

        parsrnum = parse(message.text)
        timeZone = timezone.time_zones_for_number(parsrnum)
        Karri = carrier.name_for_number(parsrnum, 'ru')
        Region = geocoder.description_for_number(parsrnum, 'ru')

        if '993' in message.text or '995' in message.text:
            Karri = "–¢–∏–Ω—å–∫–æ—Ñ—Ñ –ú–æ–±–∞–π–ª"
        elif message.text[2:-7] in mts_codes:
            Karri = "–ú–¢–°"
        # print(message.text[2:-7])
        await message.reply(f'–°—Ç—Ä–∞–Ω–∞: <i>{Region}</i>\n–û–ø–µ—Ä–∞—Ç–æ—Ä: <i>{Karri}</i>', parse_mode="HTML")
        # \n–í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–æ–Ω–∞: < i > {timeZone} < / i >\n
    elif fuzz.partial_ratio(message.text, "–∫—É–±–∏–∫") > 65:
        await message.answer_dice()
    elif message.text not in all_cmds:
        wiki = message.text
        wikipedia.set_lang("ru")
        title = wikipedia.page(wiki).title
        page = wikipedia.summary(wiki)
        await message.reply(f"<strong><i>{title}</i></strong>\n\n{page}", parse_mode='HTML')
    else:
        await bot.send_message(message.from_user.id, text=random.choice(errors))



# hellower = ["–ê–≤–µ", ""–°–∞–ª–∞–º", ""–ü—Ä–∏–≤–µ—Ç", ""–•–∞—É–¥–∏", ""–ö–∞–∫–∏–µ –ª—é–¥–∏? –≠—Ç–æ –∂–µ", ""–•–µ–ª–ª–æ—É"]
#
# if config.greetingsD is not True:
#     print(random.choice(hellower) + ", "" + {name} + "!")
# else:
#     if dt.now().hour >= 4 and dt.now().hour <= 12:
#         print(greeting[0] + ", "" + {name} + "!")
#     elif dt.now().hour >= 12 and dt.now().hour <= 16:
#         print(greeting[1] + ", "" + {name} + "!")
#     elif dt.now().hour >= 16 and dt.now().hour <= 24:
#         print(greeting[2] + ", "" + {name} + "!")
#     elif dt.now().hour >= 24 or dt.now().hour <= 4:
#         print(greeting[3] + ", "" + {name} + "!")

# def settings():
#     print("–ù–∏–∫:", "{name})
#     if config.greetingsD is True:
#         print("–°—Ç–∏–ª—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è: –î–µ–ª–æ–≤–æ–π")
#     else:
#         print("–°—Ç–∏–ª—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è: –†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π")
#
#     while True:
#         change = input("–ñ–µ–ª–∞–µ—Ç–µ –ª–∏ –≤—ã —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–∑–º–µ–Ω–∏—Ç—å?\n> ")
#         if change == "–ù–µ—Ç":
#             break
#         elif change == "–î–∞":
#             while True:
#                 ch = input("–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?\n> ")
#                 if ch == "–ù–∏–∫":
#                     setting.setname()
#                     break
#                 elif ch == "–°—Ç–∏–ª—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è":
#                     setting.setgreeting()
#                     break
#         else:
#             print("–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª. –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –î–∞ –∏–ª–∏ –ù–µ—Ç.")
#
# def now_track():
#     client = Client("AQAAAAAiZU9XAAG8Xh_RpJGGeEgykU-j-pwEGWk").init()
#
#     queues = client.queues_list()
#     last_queue = client.queue(queues[0].id)
#
#     last_track_id = last_queue.get_current_track()
#     last_track = last_track_id.fetch_track()
#
#     artists = ', "'.join(last_track.artists_name())
#     title = last_track.title
#     fsec = last_track.duration_ms // 1000 % 60
#     print('–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç: {artists} - {title}')
#     print("–î–ª–∏–Ω–∞ —Ç—Ä–µ–∫–∞: " + str(last_track.duration_ms // 60000) + ":" + str(int(fsec//10)) + str(int(fsec%10)))

if __name__ == '__main__':
    executor.start_polling(dp)