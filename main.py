import random, config

from bs4 import BeautifulSoup as bs
from datetime import datetime as dt
import requests as r
from yandex_music import Client
from aiogram import Bot, types
from aiogram.dispatcher import Dispatcher
from aiogram.utils import executor

bot = Bot(config.token)
dp = Dispatcher(bot)

emojies =['‚≠ê', '‚ù§Ô∏è', 'üî•', '‚ú®', 'üë®‚Äçüíª', 'üë®‚Äçüîß']
errors = ['–Ø –Ω–µ –ø–æ–Ω—è–ª! –ù–∞–ø–∏—à–∏ —á—Ç–æ-—Ç–æ –º–µ–Ω–µ–µ –æ—Å—Ç—Ä–æ—É–º–Ω–æ–µ.', "–ú–æ—è —Ç–≤–æ—è –Ω–µ –ø–æ–Ω–∏–º–∞—Ç—å! –ü–∏—à–∏ –ø–æ–Ω—è—Ç–Ω–µ–µ.", "–û—à–∏–±–∫–∞: –ë–æ—Ç–°–ª–∏—à–∫–æ–º–¢—É–ø–æ–π–ß—Ç–æ–±—ã–≠—Ç–æ–ü–æ–Ω—è—Ç—å!", "–ù–∏—á–µ–≥–æ –Ω–µ –ø–æ–Ω–∏–º–∞—é!", "–°–æ—Ä—Ä–∏, –º–∞–π –±—Ä–µ–π–Ω –∏—Å —Ç—É—É —Å–º–æ–ª —Ç—É –∞–Ω–¥–µ—Ä—Å—Ç–µ–Ω–¥ —Ç—Ö–∏—Å!"]
last_jokes = []

@dp.message_handler(commands=['start'])
async def start_cmd(message: types.Message):
    global emojies
    #await bot.send_message(message.from_user.id, text=message.from_user.id)
    name = message.from_user.first_name
    if int(message.from_user.id) != int("1618502708") and int(message.from_user.id) != int("940369449"):
        await bot.send_message(message.from_user.id, text=f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {name}!")
    else:
        await bot.send_message(message.from_user.id, text=f"–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {name}! " + random.choice(emojies))

@dp.message_handler()
async def jokes(message: types.Message):
    global errors
    if message.text == "–ê–Ω–µ–∫–¥–æ—Ç":
        url = 'https://www.anekdot.ru/release/anekdot/day/'
        html = r.get(url)
        soup = bs(html.text, 'html.parser')
        print(random.choice(soup.select(".text")).text)
    else:
        await bot.send_message(message.from_user.id, text=random.choice(errors))

# greeting = ["–î–æ–±—Ä–æ–µ —É—Ç—Ä–æ", "–î–æ–±—Ä—ã–π –¥–µ–Ω—å", "–î–æ–±—Ä—ã–π –≤–µ—á–µ—Ä", "–î–æ–±—Ä–æ–π –Ω–æ—á–∏"]
# hellower = ["–ê–≤–µ", "–°–∞–ª–∞–º", "–ü—Ä–∏–≤–µ—Ç", "–•–∞—É–¥–∏", "–ö–∞–∫–∏–µ –ª—é–¥–∏? –≠—Ç–æ –∂–µ", "–•–µ–ª–ª–æ—É"]
#
# if config.greetingsD is not True:
#     print(random.choice(hellower) + ", " + config.name + "!")
# else:
#     if dt.now().hour >= 4 and dt.now().hour <= 12:
#         print(greeting[0] + ", " + config.name + "!")
#     elif dt.now().hour >= 12 and dt.now().hour <= 16:
#         print(greeting[1] + ", " + config.name + "!")
#     elif dt.now().hour >= 16 and dt.now().hour <= 24:
#         print(greeting[2] + ", " + config.name + "!")
#     elif dt.now().hour >= 0 or dt.now().hour <= 4:
#         print(greeting[3] + ", " + config.name + "!")

# def settings():
#     print("–ù–∏–∫:", config.name)
#     if config.greetingsD is True:
#         print("–°—Ç–∏–ª—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è: –î–µ–ª–æ–≤–æ–π")
#     else:
#         print("–°—Ç–∏–ª—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è: –†–∞–∑–≥–æ–≤–æ—Ä–Ω—ã–π")
#
#     while True:
#         change = input("–ñ–µ–ª–∞–µ—Ç–µ –ª–∏ –≤—ã —á—Ç–æ-–Ω–∏–±—É–¥—å –∏–∑–º–µ–Ω–∏—Ç—å?\n> ")
#         if change == "–ù–µ—Ç":
#             break
#         elif change == "–î–∞":
#             while True:
#                 ch = input("–ß—Ç–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å?\n> ")
#                 if ch == "–ù–∏–∫":
#                     setting.setname()
#                     break
#                 elif ch == "–°—Ç–∏–ª—å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è":
#                     setting.setgreeting()
#                     break
#         else:
#             print("–Ø –≤–∞—Å –Ω–µ –ø–æ–Ω—è–ª. –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –Ω–∞–ø–∏—Å–∞—Ç—å –î–∞ –∏–ª–∏ –ù–µ—Ç.")
#
# def now_track():
#     client = Client("AQAAAAAiZU9XAAG8Xh_RpJGGeEgykU-j-pwEGWk").init()
#
#     queues = client.queues_list()
#     last_queue = client.queue(queues[0].id)
#
#     last_track_id = last_queue.get_current_track()
#     last_track = last_track_id.fetch_track()
#
#     artists = ', '.join(last_track.artists_name())
#     title = last_track.title
#     fsec = last_track.duration_ms // 1000 % 60
#     print(f'–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç: {artists} - {title}')
#     print("–î–ª–∏–Ω–∞ —Ç—Ä–µ–∫–∞: " + str(last_track.duration_ms // 60000) + ":" + str(int(fsec//10)) + str(int(fsec%10)))

if __name__ == '__main__':
    executor.start_polling(dp)